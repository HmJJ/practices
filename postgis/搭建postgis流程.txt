docker run -d --name postgis --restart always -e POSTGRES_USER='postgres' -e POSTGRES_PASSWORD='root' -e ALLOW_IP_RANGE=0.0.0.0/0 -v /home/postgresql/data:/home/postgresql/data -p 5432:5432 -t kartoza/postgis：11.0-2.5



# 用centos镜像生成容器
# docker pull centos:latest
# docker run -d -p 54432:5432 --name postgresql -t centos:latest

# 进入容器并更新
# docker exec -it postgresql bash
# yum update -y
# yum install sudo -y

# 安装ansible
# yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -y
# sudo yum install ansible  -y

# 环境安装
yum install -y perl-ExtUtils-Embed readline-devel zlib-devel pam-devel libxslt-devel openldap-devel  python-devel gcc-c++ openssl-devel gcc* readline-devel bzip2 libtiff-devel libcurl-devel postgresql-contrib boost boost-devel m4 -y

# 如果不存在data目录则创建并进入
if [ ! -d "data" ];
then 
	mkdir data
fi
cd data

if [ ! -i "cmake-3.14.5-Linux-x86_64.tar.gz" ];then
	wget https://github.com/Kitware/CMake/releases/download/v3.14.5/cmake-3.14.5-Linux-x86_64.tar.gz
fi
if [ ! -d "/app/cmake-3.14.5-Linux-x86_64/" ];then
	tar -zxvf cmake-3.14.5-Linux-x86_64.tar.gz -C /app
	echo "export CMAKE_HOME=/app/cmake-3.14.5-Linux-x86_64" >> /etc/profile
	echo "export PATH=$PATH:$CMAKE_HOME/bin" >> /etc/profile
	source /etc/profile
fi

if hash wget 2 > /dev/null;then
	yum install wget -y
fi

# postgresql-12.3 (required)

if [ ! -i "postgresql-12.3.tar.gz" ];then
	wget https://ftp.postgresql.org/pub/source/v12.3/postgresql-12.3.tar.gz
fi
if [ ! -d "/use/local/pgsql/" ];then
	tar -xzvf postgresql-12.3.tar.gz -C /app
	cd /app/postgresql-12.3
	./configure --prefix=/usr/local/pgsql
	make && make install
	echo "/usr/local/pgsql/lib" >> /etc/ld.so.conf
	# 修改postgresql安装目录的权限
	chmod -R 777 /usr/local/pgsql
fi

# geos-3.8.1 (required)

if [ ! -i "geos-3.8.1.tar.bz2" ];then
	wget http://download.osgeo.org/geos/geos-3.8.1.tar.bz2
fi
if [ ! -d "/use/local/geos-3.8.1/" ];then
	tar -jxvf geos-3.8.1.tar.bz2 -C /app
	cd /app/geos-3.8.1
	./configure
	make && make install
fi

# sqlite-autoconf-3320300 (required)

if [ ! -i "sqlite-autoconf-3320300.tar.gz" ];then
	wget https://www.sqlite.org/2020/sqlite-autoconf-3320300.tar.gz
fi
if [ ! -d "/use/local/sqlite3/" ];then
	tar -zxvf sqlite-autoconf-3320300.tar.gz -C /app
	cd /app/sqlite-autoconf-3320300
	./configure
	make && make install
fi

# proj-7.1.0 (required)

if [ ! -i "proj-7.1.0.tar.gz" ];then
	wget https://download.osgeo.org/proj/proj-7.1.0.tar.gz
fi
if [ ! -d "/use/local/proj-7.1.0/" ];then
	tar -zxvf proj-7.1.0.tar.gz -C /app
	cd /app/proj-7.1.0
	./configure --prefix=/usr/local/proj-7.1.0
	make && make install
fi

# gdal-3.1.2 (required)

if [ ! -i "gdal-3.1.2.tar.gz" ];then
	wget https://github.com/OSGeo/gdal/releases/download/v3.1.2/gdal-3.1.2.tar.gz
fi
if [ ! -d "/use/local/gdal-3.1.2/" ];then
	tar -zxvf gdal-3.1.2.tar.gz -C /app
	cd /app/gdal-3.1.2
	./configure --with-pg=/usr/local/pgsql/bin/pg_config
	make && make install
fi

# json-c-0.13.1 (required)

if [ ! -i "json-c-0.13.1-20180305.tar.gz" ];then
	wget https://github.com/json-c/json-c/archive/json-c-0.13.1-20180305.tar.gz
fi
if [ ! -d "/use/local/json-c-0.13.1/" ];then
	tar -zxvf json-c-0.13.1-20180305.tar.gz -C /app
	cd /app/json-c-0.13.1-20180305
	./configure
	make && make install
fi

# libxml2-2.9.8 (required)

if [ ! -i "libxml2-2.9.8.tar.gz" ];then
	wget ftp://xmlsoft.org/libxml2/libxml2-2.9.8.tar.gz
fi
if [ ! -d "/use/local/libxml2-2.9.8/" ];then
	tar -zxvf libxml2-2.9.8.tar.gz -C /app
	cd /app/libxml2-2.9.8
	./configure  --prefix=/usr/local/libxml2-2.9.8 --with-python=no
	make && make install
	echo "/usr/local/libxml2-2.9.8/lib" >> /etc/ld.so.conf
fi

# gmp-6.1.2

if [ ! -i "gmp-6.1.2.tar.bz2" ];then
	wget https://gmplib.org/download/gmp/gmp-6.1.2.tar.bz2
fi
if [ ! -d "/use/local/gmp-6.1.2/" ];then
	tar -jxvf gmp-6.1.2.tar.bz2 -C /app
	cd /app/gmp-6.1.2
	./configure  --prefix=/usr/local/gmp-6.1.2 --enable-cxx
	make && make check && make install
fi

# mpfr-4.1.0

if [ ! -i "mpfr-4.1.0.tar.gz" ];then
	wget https://www.mpfr.org/mpfr-current/mpfr-4.1.0.tar.gz
fi
if [ ! -d "/use/local/mpfr-4.1.0/" ];then
	tar -zxvf mpfr-4.1.0.tar.gz -C /app
	cd /app/mpfr-4.1.0
	./configure  --prefix=/usr/local/mpfr-4.1.0 --with-gmp-include=/usr/local/gmp-6.1.2/include --with-gmp-lib=/usr/local/gmp-6.1.2/lib
	make && make check && make install
fi

# CGAL-4.13

if [ ! -i "CGAL-4.13.tar.gz" ];then
	wget https://github.com/CGAL/cgal/archive/releases/CGAL-4.13.tar.gz
fi
if [ ! -d "/use/local/CGAL-4.13/" ];then
	tar -zxvf CGAL-4.13.tar.gz -C /app
	cd /app/cgal-releases-CGAL-4.13
	mkdir build
	cd build
	cmake ..
	make && make install
fi

# sfcgal-1.3.6

if [ ! -i "sfcgal-1.3.6.tar.gz" ];then
	wget https://github.com/Oslandia/SFCGAL/archive/v1.3.6.tar.gz
fi
if [ ! -d "/use/local/sfcgal-1.3.6/" ];then
	mv v1.3.6.tar.gz sfcgal-1.3.6.tar.gz
	tar -zxvf sfcgal-1.3.6.tar.gz -C /app
	cd /app/sfcgal-1.3.6
	mkdir build
	cd build
	cmake -DCMAKE_INSTALL_PREFIX=/usr/local/sfcgal-1.3.6 ..
	make && make install
fi

# postgis-3.0.1

if [ ! -i "postgis-3.0.1.tar.gz" ];then
	wget https://download.osgeo.org/postgis/source/postgis-3.0.1.tar.gz
fi
if [ ! -d "/use/local/postgis/" ];then
	tar -zxvf postgis-3.0.1.tar.gz -C /app
	cd /app/postgis-3.0.1
	./configure --prefix=/usr/local/postgis --with-pgconfig=/usr/local/pgsql/bin/pg_config
	make && make install
fi

# root没有密码则设置一个

# 设置数据存放目录
adduser postgres

# 配置环境变量
vi /etc/profile

#在文件末尾将以下环境变量添加进去
export PGHOME=/opt/postgres
export PGDATA=/opt/postgres/data/
export PATH=$PGHOME/bin:$PATH:$HOME/bin

sed -i '$a\export PGHOME=/opt/postgres' /etc/profile
sed -i '$a\export PGDATA=/opt/postgres/data' /etc/profile
sed -i '$a\export PATH=$PGHOME/bin:$PATH:$HOME/bin' /etc/profile
source /etc/profile

su postgres
/usr/local/pgsql/bin/initdb --no-locale -U postgres -E utf8 -D $PGDATA -W
## root
/usr/local/pgsql/bin/pg_ctl -D $PGDATA -l $PGHOME/pgsql.log start

#postgres安装好以后需要修改2个配置文件才能允许别的服务器访问。
cd $PGDATA

vi postgresql.conf
#找到listen_addresses和port参数，修改如下，也可根据自己需求修改
listen_addresses = '*'
port = 5432

#根据自己的网段设置下放行的ip规则
vi pg_hba.conf

# IPv4 local connections:
host    all             postgres                                  md5
host    all             all             192.168.0.0/16            md5
