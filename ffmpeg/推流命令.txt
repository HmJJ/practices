在已经搭好ffmpeg+nginx+rtmp流服务器的情况下

服务器上nginx配置如下：
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#eriror_log  logs/error.log  info;
error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;
        application video1 {
            live on;
        }
        application video2 {
            live on;
        }
    }
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
 }


 首先在另一台安装了ffmpeg的机器上将一段视频推到流服务器上：
 	ffmpeg -re -i rise.mp4 -f flv rtmp://39.108.64.144:1935/video

 	还可通过-b:v来设置视频的带宽即清晰度，-b:a来设置音频的质量
 	ffmpeg -re -i delogo.mp4 -b:v 2000k -b:a 128k -r 25 -s 640*480 -f flv rtmp://39.108.64.144:1935/video
 	

 然后在任意支持rtmp的播放器或者ffmpeg内置的ffplay播放该流服务器视频地址： rtmp://39.108.64.144:1935/video
 	例如ffplay： 命令行输入 ffplay rtmp://39.108.64.144:1935/video 即可观看

 获取本地摄像头并推流到服务器：
 	调用本地摄像头： ffplay -f vfwcap -i 本地摄像头
	ffmpeg -f vfwcap -i 0 -vcodec libx264 D:/data/video/mycamera.h264

 	ffmpeg -re -i mycamera.h264 -b:v 2000k -b:a 96k -r 25 -s 640*480 -f flv rtmp://39.108.64.144:1935/video

-----------------------------------
    这种方式是直接把摄像头数据推流到服务器，但是如果机器不太行的话，很容易就buffsize不够了，很容易导致推流的视频卡住。

	ffmpeg -f dshow -i video="Integrated Webcam" -y -q 4 -s 640*480 -aspect 4:3 -r 10 -vcodec flv -ar 22050 D:/data/video/video.mkv -ab 64k -ac 1 -acodec libmp3lame -threads 4 -f flv rtmp://39.108.64.144:1935/video1

-----------------------------------
    通过本地文件先缓存的形式，先把摄像头数据保存到一个mkv文件中，再推流该文件，这种方式会有一定的延迟（10s），如果想降低延迟的话，可以通过减少采集缓存、减少音频采集samples数量等来实现，具体参考：https://blog.csdn.net/zhuweigangzwg/article/details/82223011
    av_dict_set(&p_device_options,"rtbufsize",str_buf_size,0);
    av_dict_set(&p_device_options,"start_time_realtime",0,0);
    av_dict_set(&p_device_options, "audio_buffer_size","30", 0); 

    命令：

    ffmpeg -f dshow -i video="Integrated Webcam" -q 4 -s 640*480 -aspect 4:3 -r 10 -vcodec flv  -ab 64k -ac 1 -acodec libmp3lame -ar 22050 D:/data/video/video.mkv -y

    ffmpeg -re -i D:/data/video/video.mkv -b:v 2000k -b:a 128k -r 25 -s 640*480 -f flv rtmp://39.108.64.144:1935/video

-----------------------------------
	ip摄像头推流
	ffmpeg -i rtsp://admin:12345@192.168.44.2:8000 -y -rtbufsize 100m -f mpeg1video -b:v 500k -r 21 -q:v 10 -s 640x480 -f flv rtmp://39.109.64.144:1935/video1

	ffmpeg -i rtsp://admin:wOs@1003@192.168.3.101:554 -vcodec copy -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 -f flv rtmp://localhost:1935/hls