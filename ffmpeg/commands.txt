1、视频格式转换
	.avi --> .mp4 : ffmpeg -i input.avi output.mp4
	.mp4 --> .ts  : ffmpeg -i input.mp4 output.ts
	从视频播放地址下载视频： ffmpeg -i "http://......." output.mp4

2、提取音频
	ffmpeg -i rise.mp4 -acodec copy -vn output.aac 视频中的音频为aac格式提取为aac格式的音频
	ffmpeg -i rise.mp4 -acodec aac -vn output.aac  任意格式的音频提取为aac格式
	(-vn 不处理视频)

3、提取视频
	ffmpeg -i input.mp4 -vcodec copy -an output.mp4
	(-an 不处理音频)

4、视频剪切
	ffmpeg -ss 00:00:15 -t 00:00:05 -i input.mp4 -vcodec copy -acodec copy output.mp4
	(-ss表示开始切割的时间  -t表示要切多久)

5、码率控制
	码率: bitrate = file size / duration
	码率控制的3种选择： -minrate、-b:v、-maxrate

	-b:v主要是控制平均码率: ffmpeg -i put.mp4 -b:v 2000k output.mp4
		配合-bufsize使用可以让整体码率更趋近希望值，减少波动: ffmpeg -i input.mp4 -b:v 2000k -bufsize 2000k output.mp4

	-minrate -maxrate设置码率阈值: ffmpeg -i input.mp4 -b:v 2000k -bufsize 2000k -maxrate 2500k output.mp4

6、视频编码格式转换
	转成H264格式: ffmpeg -i input.mp4 -vcodec h264 output.mp4
	转成MPEG4格式: ffmpeg -i input.mp4 -vcodec mpeg4 output.mp4

7、只提取视频ES数据
	ffmpeg -i input.mp4 -vcodec copy -an -f m4v output.h264

8、改变视频的宽高比
	ffmpeg -i imput.mp4 -vf scale=960:540 output.mp4

9、为视频添加logo
	ffmpeg -i input.mp4 -i iQIYI_logo.png -filter_complex overlay output.mp4

10、去除视频的logo
	ffmpeg -i rise.mp4 -filter_complex "delogo=x=1525:y=55:w=315:h=80" delogo.mp4

11、抓取视频的一些帧，存为jpeg图片
	ffmpeg -i input.mp4 -r 1 -q:v 2 -f image2 pic-%03d.jpeg
	(-f表示一秒几帧   -q:v表示存储jpeg的图像质量，一般2是高质量)
	ffmpeg -i input.mp4 -ss 00:00:20 -t 10 -r 1 -q:v 2 -f image2 pic-%03d.jpeg
	(-ss表示开始时间  -t表示共要多少时间)

12、输出YUV420原始数据
	ffmpeg -i input.mp4 output.yuv
	某一帧的YUV: ffmpeg -i input.mp4 -ss 00:00:20 -t 10 -r 1 -q:v 2 -f image2 pic-%03d.jpeg

13、H264编码profile & level控制
	ffmpeg -i input.mp4 -profile:v baseline -level 3.0 output.mp4
	ffmpeg -i input.mp4 -profile:v main -level 4.2 output.mp4
	ffmpeg -i input.mp4 -profile:v high -level 5.1 output.mp4
	从压缩比例来说，baseline< main < high，对于带宽比较局限的在线视频，可能会选择high，但有些时候，做个小视频，希望所有的设备基本都能解码（有些低端设备或早期的设备只能解码baseline），那就牺牲文件大小吧，用baseline。

14、使用ffmpeg推流
	ffmpeg -re -i 1.mp4 -vcodec copy -f flv rtmp://localhost/live
	(-re : 表示使用文件的原始帧率进行读取)
	ffmpeg -re -i rise.mp4 -vcodec copy -b:v 800k -b:a 32K -f flv rtmp://localhost/live/stream
	-vcodec copy : -vcodec表示使用的视频编解码器 ，前缀v表示video。后面紧跟的copy 表示复制使用源文件的视频编解码器，比如原文件的编解码器(codec)是h264，则这里就使用h264。
	-acodec copy : -acodec表示使用的音频编解码器，前缀a表示audio。后面的copy 表示使用源文件的音频编解码器。
	-b:v 800k : -b:v表示视频的比特率(bitrate) ，为800k。
	-b:a 32k : 表示音频的比特率为32k。
	-f flv : -f表示format ，就是强制输出格式为flv，这一步其实也叫封装(mux)，封装要做的事就是把视频和音频混合在一起，进行同步。紧跟在后面的rtmp://localhost/live 表示输出的"文件名"，这个文件名可以是一个本地的文件，也可以指定为rtmp流媒体地址。指定为rtmp流媒体地址后，则ffmpeg就可以进行推流。